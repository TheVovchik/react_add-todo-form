{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utils.tsx","App.tsx","api/users.ts","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","CN","completed","title","TodoList","todos","map","findUser","userId","users","find","username","App","useState","setUserId","isUserIdValid","setIsUserIdValid","setTitle","isTitleValid","setIsTitleValid","action","method","onSubmit","event","preventDefault","maxId","Math","max","push","type","value","placeholder","onChange","currentValue","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed77cd9e.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport CN from 'classnames';\nimport { Todos } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    key={todo.id}\n    data-id={todo.id}\n    className={CN('TodoInfo',\n      { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todos } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      { todos.map((todo) => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { User } from './react-app-env';\n\nexport function findUser(userId: number, users: User[]) {\n  return users.find(user => user.id === userId) || null;\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User, Todos } from './react-app-env';\nimport { TodoList } from './components/TodoList';\nimport { findUser } from './utils';\n\nconst users: User[] = usersFromServer;\n\nconst todos: Todos[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: findUser(todo.userId, users),\n}));\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [isUserIdValid, setIsUserIdValid] = useState(false);\n  const [title, setTitle] = useState('');\n  const [isTitleValid, setIsTitleValid] = useState(false);\n\n  const resetForm = () => {\n    setUserId(0);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsUserIdValid(!userId);\n    setIsTitleValid(!title);\n\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    if (userId && title) {\n      todos.push({\n        id: maxId + 1,\n        title,\n        completed: false,\n        userId,\n        user: findUser(userId, users),\n      });\n\n      resetForm();\n    }\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currentValue = event.target.value;\n\n    setTitle(currentValue);\n    setIsTitleValid(!currentValue);\n  };\n\n  const handleUserSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const currentValue = +event.target.value;\n\n    setUserId(currentValue);\n    setIsUserIdValid(!currentValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleInput}\n            />\n          </label>\n\n          {isTitleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserSelection}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(({ id, name }) => (\n                <option value={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n\n          {isUserIdValid && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}